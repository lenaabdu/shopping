{"version":3,"sources":["util.js","actions/cartActions.js","actions/types.js","components/Products.js","actions/productActions.js","components/Filter.js","components/Basket.js","reducers/productReducers.js","reducers/index.js","reducers/cartReducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","addToCart","items","product","dispatch","cartItems","slice","productAlreadyInCart","forEach","cp","id","count","push","localStorage","setItem","JSON","stringify","type","payload","Products","this","props","fetchProducts","productItems","products","map","className","key","href","onClick","e","src","sku","alt","title","util","price","Component","connect","state","filteredItems","cart","fetch","then","res","json","catch","err","data","Filter","filteredProducts","length","value","sort","onChange","event","sortProducts","target","size","filterProducts","filter","x","availableSizes","indexOf","toUpperCase","a","b","Basket","style","marginLeft","item","float","removeFromCart","reduce","c","alert","initState","combineReducers","action","getItem","parse","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ba1de7dd.chunk.js","sourcesContent":["export default {\n    formatCurrency: function (num) {\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\n    }\n}","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./types\";\n\nexport\nconst addToCart = (items, product) => (dispatch) => {\n    const cartItems = items.slice();\n    let productAlreadyInCart = false;\n\n    cartItems.forEach((cp) => {\n        if (cp.id === product.id) {\n            cp.count += 1;\n            productAlreadyInCart = true;\n        }\n    });\n    if (!productAlreadyInCart) {\n        cartItems.push({...product, count: 1 });\n    }\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    dispatch({ type: ADD_TO_CART, payload: { cartItems } });\n};\n\nexport const removeFromCart = (items, product) => (dispatch) => {\n    const cartItems = items.slice().filter((a) => a.id !== product.id);\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n};","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport util from \"../util\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { fetchProducts } from \"../actions/productActions\";\nclass Products extends Component {\n  componentDidMount() {\n    this.props.fetchProducts();\n  }\n  render() {\n    const productItems = this.props.products.map((product) => (\n      <div className=\"col-md-4\" key={product.id}>\n        <div className=\"thumbnail text-center\">\n          <a  href={`#${product.id}`} className=\"color\"  onClick={(e) => this.props.addToCart(this.props.cartItems, product)}   >\n            <img src= {`http://localhost:8000/products/${product.sku}_2.jpg`} alt={product.title}  />\n            <p>{product.title}</p>\n          </a>\n          <b>{util.formatCurrency(product.price)}</b>\n          <button  className=\"btn btn-primary\" onClick={(e) => this.props.addToCart(this.props.cartItems, product)}  >\n            Add to cart\n          </button>\n        </div>\n      </div>\n    ));\n\n    return <div className=\"row\">{productItems}</div>;\n  }\n}\nconst mapStateToProps = (state) => ({\n  products: state.products.filteredItems,\n  cartItems: state.cart.items,\n});\nexport default connect(mapStateToProps, { fetchProducts, addToCart })(Products);\n","import {\n  FETCH_PRODUCTS,\n  FILTER_PRODUCTS_BY_SIZE,\n  ORDER_PRODUCTS_BY_PRICE,\n} from \"./types\";\n\nexport const fetchProducts = () => (dispatch) => {\n  fetch(\"http://localhost:8000/products\")\n    .then((res) => res.json())\n    .catch((err) =>\n      fetch(\"db.json\")\n        .then((res) => res.json())\n        .then((data) => data.products)\n    )\n    .then((data) => {\n      dispatch({ type: FETCH_PRODUCTS, payload: data });\n    });\n};\n\nexport const filterProducts = (products, size) => (dispatch) => {\n  dispatch({\n    type: FILTER_PRODUCTS_BY_SIZE,\n    payload: {   size: size,\n      items:  size === \"\"   ? products  : products.filter(\n              (x) => x.availableSizes.indexOf(size.toUpperCase()) >= 0\n            ),\n    },\n  });\n};\n\nexport const sortProducts = (items, sort) => (dispatch) => {\n  const products = items.slice();\n  if (sort !== \"\") {\n    products.sort((a, b) =>\n      sort === \"lowestprice\" ? a.price > b.price   ? 1   : -1\n        : a.price < b.price ? 1 : -1\n    );\n  } else {\n    products.sort((a, b) => (a.id > b.id ? 1 : -1));\n  }\n  dispatch({\n    type: ORDER_PRODUCTS_BY_PRICE,\n    payload: {\n      sort: sort,\n      items: products,\n    },\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\nclass Filter extends Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4\">{`${this.props.filteredProducts.length} products found.`}</div>\n        <div className=\"col-md-4\">\n          <label>\n            Order by\n            <select\n              className=\"form-control\"\n              value={this.props.sort}\n              onChange={(event) => {\n                this.props.sortProducts(\n                  this.props.filteredProducts,\n                  event.target.value\n                );\n              }}\n            >\n              <option value=\"\">Select</option>\n              <option value=\"lowestprice\">Lowest to highest</option>\n              <option value=\"highestprice\">Highest to lowest</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"col-md-4\">\n          <label>\n            {\" \"}\n            Filter Size\n            <select     className=\"form-control\" value={this.props.size}  onChange={(event) => \n            { this.props.filterProducts(this.props.products, event.target.value\n                );\n              }}\n            >\n              <option value=\"\">ALL</option>\n              <option value=\"x\">XS</option>\n              <option value=\"s\">S</option>\n              <option value=\"m\">M</option>\n              <option value=\"l\">L</option>\n              <option value=\"xl\">XL</option>\n              <option value=\"xxl\">XXL</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  products: state.products.items,\n  filteredProducts: state.products.filteredItems,\n  size: state.products.size,\n  sort: state.products.sort,\n});\nexport default connect(mapStateToProps, { filterProducts, sortProducts })(\n  Filter\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport util from \"../util\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nclass Basket extends Component {\n  render() {\n    const { cartItems } = this.props;\n\n    return (\n      <div className=\"alert alert-info\">\n        {cartItems.length === 0 ? (\n          \"Basket is empty\"\n        ) : (\n          <div>\n            You have {cartItems.length} items in the basket. <hr />\n          </div>\n        )}\n        {cartItems.length > 0 && (\n          <div>\n            <ul style={{ marginLeft: -25 }}>\n              {cartItems.map((item) => (\n                <li key={item.id}>\n                  <b>{item.title}</b>\n                  <button\n                    style={{ float: \"right\" }}\n                    className=\"btn btn-primary btn-xs\"\n                    onClick={(e) =>\n                      this.props.removeFromCart(this.props.cartItems, item)\n                    }\n                  >\n                    X\n                  </button>\n                  <br />\n                  {item.count} X {util.formatCurrency(item.price)}\n                </li>\n              ))}\n            </ul>\n\n            <b>\n              Sum:{\" \"}\n              {util.formatCurrency(\n                cartItems.reduce((a, c) => a + c.price * c.count, 0)\n              )}\n            </b>\n            <button onClick={() => alert(\"Implement checkout page.\")} className=\"btn btn-primary\" >\n              checkout\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  cartItems: state.cart.items,\n});\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(Basket);\n","import {\n  FETCH_PRODUCTS,\n  FILTER_PRODUCTS_BY_SIZE,\n  ORDER_PRODUCTS_BY_PRICE,\n} from \"../actions/types\";\n\nconst initState = { items: [], filteredItems: [], size: \"\", sort: \"\" };\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return { ...state, items: action.payload, filteredItems: action.payload };\n    case FILTER_PRODUCTS_BY_SIZE:\n      return {\n        ...state,\n        filteredItems: action.payload.items,\n        size: action.payload.size,\n      };\n    case ORDER_PRODUCTS_BY_PRICE:\n      return {\n        ...state,\n        filteredItems: action.payload.items,\n        sort: action.payload.sort,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport productReducers from \"./productReducers\";\nimport cartReducers from \"./cartReducers\";\n\nexport default combineReducers({\n  products: productReducers,\n  cart: cartReducers,\n});\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { ...state, items: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { ...state, items: action.payload.cartItems };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./reducers\";\n\nconst cartItems = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\nconst initState = { cart: { items: cartItems } };\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducers,\n  initState,\n  composeEnhancer(applyMiddleware(thunk))\n);\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport Products from \"./components/Products\";\nimport Filter from \"./components/Filter\";\nimport Basket from \"./components/Basket\";\nimport store from \"./store\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n \n  \n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container\">\n          <h1>Shopping Cart </h1>\n          <hr />\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <Filter />\n              <hr />\n              <Products />\n            </div>\n            <div className=\"col-md-3\">\n              <Basket />\n        \n            </div>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}